configfile: "kraken2_wf_config.yaml"

import os

# setup params, inputs
raw_data_dir = config["raw_data_dir"]
run_ids, = glob_wildcards(raw_data_dir + "/{run}_1.fastq.gz")
# run_ids = ["ERR2017411", "ERR2017412", "ERR2017413"]
#run_ids, = glob_wildcards("results/raw_subsampled/{run}_seqt.subsampled.fastq")
read_mate = ["1", "2"]
master_output_dir=config["master_output_dir"]
reads_subsample=config["reads_subsample"]
seqtk_seed=config["seqtk_seed"]
nthreads=config["nthreads"]
logfile_suffix='_' + os.path.basename(master_output_dir)
log_dir=config["log_dir"]


rule all:
	input:
		"matrix.done"

rule subsample_fastq:
	input:
		fastq = expand("/project/data/raw/SRA/{run}_{read_mate}.fastq.gz", run=run_ids, read_mate=read_mate)
	output:
		subsampled_fastq = expand("{master_output_dir}/raw_subsampled/{run}_seqt.subsampled_{read_mate}.fastq", run=run_ids, read_mate=read_mate, master_output_dir=master_output_dir)
	params:
		subsample_fraction=reads_subsample,
		output_dir=expand("{master_output_dir}/raw_subsampled/", master_output_dir=master_output_dir),
		nthreads=nthreads,
		seqtk_seed=seqtk_seed
	threads: nthreads
	#conda:
		#"envs/seqtk.yml"
	log:
		expand("{log_dir}/subsample_fastq{logfile_suffix}.log", log_dir=log_dir, logfile_suffix=logfile_suffix)
	shell:
		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"python /project/src/metagenpipe.py run-seqtk --subsample_fraction={params.subsample_fraction} --rng_seed={params.seqtk_seed} --output_dir={params.output_dir} --nthreads={params.nthreads} {input.fastq} &>> {log} &&"
		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
		"echo \"INFO: Process finished on $end_dt\" &>> {log}"

rule kneaddata:
	input:
		fastq = rules.subsample_fastq.output.subsampled_fastq,
	output:
		check=temp(touch("kneaddata.done")),
		fastq=expand("{master_output_dir}/kneaddata/{run}_seqt.subsampled_1_kneaddata_paired_{read_mate}.fastq", run=run_ids, read_mate=read_mate, master_output_dir=master_output_dir)
	params:
		reference_db="/project/data/raw/kneaddata_db/hg37dec_v0.1.4.bt2",
		output_dir=expand("{master_output_dir}/kneadeddata/", master_output_dir=master_output_dir),
		trimmomatic="/root/anaconda/envs/microbiome/share/trimmomatic-0.39-2/",
		nthreads=nthreads
	threads: nthreads
	#conda:
		#"envs/kneaddata.yml"
	log:
		expand("{log_dir}/kneaddata{logfile_suffix}.log", log_dir=log_dir, logfile_suffix=logfile_suffix)
	shell:
		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"python /project/src/metagenpipe.py run-kneaddata --paired_end --reference_db={params.reference_db} --output_dir={params.output_dir} --trimmomatic={params.trimmomatic} --nthreads={params.nthreads} {input.fastq} &>> {log} &&"
		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
		"echo \"INFO: Process finished on $end_dt\" &>> {log}"

rule kraken2:
    input:
        fastq = rules.kneaddata.output.fastq
	output:
		check=temp(touch("kraken2.done")),
		read_files = expand("{master_output_dir}/kraken2/{run}_seqt.subsampled_kneaddata_read_output.txt", run=run_ids, master_output_dir=master_output_dir),
		freq_files = expand("{master_output_dir}/kraken2/{run}_seqt.subsampled_kneaddata_freq_output.txt", run=run_ids, master_output_dir=master_output_dir)
	params:
		input_type="fastq",
		output_dir=expand("{master_output_dir}/kraken2", master_output_dir=master_output_dir),
		reference_db="/project/data/raw/kraken2_db",
		nthreads=nthreads,
		dbname="/project/data/raw/kraken2db"
	threads: nthreads
	log:
		expand("{log_dir}/kraken2{logfile_suffix}.log", log_dir=log_dir, logfile_suffix=logfile_suffix)
	shell:
		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"python /project/src/metagenpipe.py run-kraken2 --paired_end=True --db_use={params.reference_db} --output_dir={params.output_dir} --nthreads {params.nthreads} {input.fastq} &>> {log} &&"
		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
		"echo \"INFO: Process finished on $end_dt\" &>> {log}"

rule matrix:
	input:
		freq_files = rules.kraken2.output.freq_files
	output:
		check=temp(touch("matrix.done")),
		count_mat = expand("{master_output_dir}/matrix/count_mat.csv", master_output_dir=master_output_dir),
		freq_mat = expand("{master_output_dir}/matrix/freq_mat.csv", master_output_dir=master_output_dir)
	params:
		output_dir = expand("{master_output_dir}/matrix", master_output_dir=master_output_dir),
		count_mat = "count_mat.csv",
		freq_mat = "freq_mat.csv"
	log:
		expand("{log_dir}/matrix{logfile_suffix}.log", log_dir=log_dir, logfile_suffix=logfile_suffix)
	shell:
 		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
 		"python /project/src/metagenpipe.py parse-kraken2-multi --output_dir={params.output_dir} --freq_mat_file={params.freq_mat} --count_mat_file={params.count_mat} {input.freq_files} &>> {log} &&"
 		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
 		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
 		"echo \"INFO: Process finished on $end_dt\" &>> {log}"
#		"python /project/src/metagenpipe.py parse-kraken2-multi --output_dir={params.output_dir} --freq_mat_file={params.freq_mat} --count_mat_file={params.count_mat} {input.freq_files} &>> {log}"




