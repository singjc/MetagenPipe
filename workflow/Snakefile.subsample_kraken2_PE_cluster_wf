configfile: "kraken2_wf_config.yaml"

import os

# setup params, inputs
raw_data_dir = config["raw_data_dir"]
print(raw_data_dir)
run_ids, read_mates, = glob_wildcards( raw_data_dir + "/{run}_{read_mate}.fastq") 
print(run_ids)
print(read_mates)
# run_ids = ["ERR2017411", "ERR2017412", "ERR2017413"]
#run_ids, = glob_wildcards("results/raw_subsampled/{run}_seqt.subsampled.fastq")
#read_mate = ["1", "2"]
master_output_dir=config["master_output_dir"]
reads_subsample=config["reads_subsample"]
seqtk_seed=config["seqtk_seed"]
nthreads=config["nthreads"]
logfile_suffix='_' + os.path.basename(master_output_dir)
log_dir=config["log_dir"]


rule all:
	input:
		#expand("results/raw_subsampled/{run}_seqt.subsampled.fastq", run=run_ids),
		#subsample_fastq="subsample_fastq.done",
		expand("results/kneadeddata/{run}_seqt.subsampled_1_kneaddata_paired_{read_mate}.fastq", run=run_ids, read_mate=read_mates)
		#kneaddata="kneaddata.done",
		#expand("results/kraken2/{run}_seqt.subsampled_1_kneaddata_paired_freq_output.txt", run=run_ids),
		#kraken2="kraken2.done",
		#matrix="matrix.done"


rule subsample_fastq:
	input:
		fastq = "/home/singjust/projects/def-hroest/data/microbiome_OJS/data/raw/SRA2/{run}_{read_mate}.fastq"
	output:
		#check=temp(touch("subsample_{run}_fastq.done")),
		subsample_fastq="results/raw_subsampled/{run}_seqt.subsampled_{read_mate}.fastq"
	params:
		#input_in_container="data/raw/SRA2/{run}.fastq",  
		output_in_container="results/raw_subsampled/{run}_seqt.subsampled_{read_mate}.fastq",  
		output_dir=expand("results/raw_subsampled/", master_output_dir=master_output_dir),
		subsample_fraction=reads_subsample,
		seqtk_seed=seqtk_seed
	threads: 1
	singularity:
		#"docker://florabioworks/microbiome_ubuntu20:cluster"
		"./.snakemake/singularity/florabioworks.simg"
	shell:
		"pwd && "
		"source /anaconda/etc/profile.d/conda.sh && "
		"pwd && "
		"conda activate microbiome && "
		"seqtk sample -s {params.seqtk_seed} {input.fastq} {params.subsample_fraction} > {params.output_in_container}"
		#"python /project/src/metagenpipe.py run-seqtk --subsample_fraction={params.subsample_fraction} --rng_seed={params.seqtk_seed} --output_dir={params.output_dir} --nthreads={threads} {input.fastq}"

rule kneaddata:
	input:
		fastq = rules.subsample_fastq.output.subsample_fastq,
		fastq_1 = "results/raw_subsampled/{run}_seqt.subsampled_1.fastq",
		fastq_2 = "results/raw_subsampled/{run}_seqt.subsampled_2.fastq"
	output:
		#check=temp(touch("kneaddata_{run}.done")),
		paired_fastq="results/kneadeddata/{run}_seqt.subsampled_1_kneaddata_paired_{read_mate}.fastq",
 		#paired_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata_paired_{read_mate}.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir)),
		#unmatched_fastq=temp("results/kneadeddata/{run}_seqt.subsampled_1_kneaddata_unmatched_{read_mate}.fastq"),
		#paired_contam_fastq=temp("results/kneadeddata/{run}_seqt.subsampled_1_kneaddata_hg37dec_v0.1_bowtie2_paired_contam_{read_mate}.fastq"),
		#unmatched_contam_fastq=temp("results/kneadeddata/{run}_seqt.subsampled_1_kneaddata_hg37dec_v0.1_bowtie2_unmatched_{read_mate}_contam.fastq"),
		#trimmed_fastq=temp("results/kneadeddata/{run}_seqt.subsampled_1_kneaddata.trimmed.{read_mate}.fastq"),
		#trimmed_single_fastq=temp("results/kneadeddata/{run}_seqt.subsampled_1_kneaddata.trimmed.single.{read_mate}.fastq")
		#paired_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata_paired_{read_mate}.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir)),
		#unmatched_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata_unmatched_{read_mate}.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir)),
		#paired_contam_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata_hg37dec_v0.1_bowtie2_paired_contam_{read_mate}.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir)),
		#unmatched_contam_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata_hg37dec_v0.1_bowtie2_unmatched_{read_mate}_contam.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir)),
		#trimmed_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata.trimmed.{read_mate}.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir)),
		#trimmed_single_fastq=temp(expand("{master_output_dir}/kneadeddata/{run}_seqt.subsampled_1_kneaddata.trimmed.single.{read_mate}.fastq", run=run_ids, read_mate=read_mates, master_output_dir=master_output_dir))
	params:
		reference_db="/project/data/raw/kneaddata_db/hg37dec_v0.1.4.bt2",
		output_dir="results/kneadeddata/",
		trimmomatic="/anaconda/envs/microbiome/share/trimmomatic-0.39-2/",
	threads: 1
	singularity:
		#"docker://whitleyo/microbiome_ubuntu20:latest"
		"./.snakemake/singularity/florabioworks.simg"
	shell:
		"source /anaconda/etc/profile.d/conda.sh && "
		"conda activate microbiome && "
		"du -sh {input.fastq} && "
		"kneaddata --input {input.fastq_1} --input {input.fastq_2} --trimmomatic {params.trimmomatic} --reference-db {params.reference_db} -- output {params.output_dir} -q=phred33 --trimmomatic-options=SLIDINGWINDOW:4:30"
		#"python /project/src/metagenpipe.py run-kneaddata --paired_end --reference_db={params.reference_db} --output_dir={params.output_dir} --trimmomatic={params.trimmomatic} --nthreads={params.nthreads} {input.fastq} &>> {log} &&"
