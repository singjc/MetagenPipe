# run_ids, = glob_wildcards("/project/data/raw/SRA/{run}.fastq")
run_ids = "ERR2017411".split()
#run_ids, = glob_wildcards("results/raw_subsampled/{run}_seqt.subsampled.fastq")

rule all:
	input:
		"kraken2.done"

rule subsample_fastq:
	input:
		fastq = expand("/project/data/raw/SRA/{run}.fastq", run=run_ids)
	output:
		subsampled_fastq = temp(expand("results/kraken2_5M/raw_subsampled/{run}_seqt.subsampled.fastq", run=run_ids))
	params:
		subsample_fraction=5000000,
		output_dir="results/kraken2_5M/raw_subsampled/",
		nthreads=6
	threads: 6
	#conda:
		#"envs/seqtk.yml"
	log:
		"logs/subsample_fastq.log"
	shell:
		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"python /project/src/metagenpipe.py run-seqtk --subsample_fraction={params.subsample_fraction} --output_dir={params.output_dir} --nthreads={params.nthreads} {input.fastq} &>> {log} &&" 
		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
		"echo \"INFO: Process finished on $end_dt\" &>> {log}"

rule kneaddata:
	input:
		fastq = rules.subsample_fastq.output.subsampled_fastq,
		#fastq = expand("results/kraken2_5M/raw_subsampled/{run}_seqt.subsampled.fastq", run=run_ids)
	output:
		#check=temp(touch("kneaddata.done")),
		extra_fastq = temp(expand("results/kraken2_5M/kneadeddata/{run}_seqt.subsampled_kneaddata.trimmed.fastq", run=run_ids)),
		contam_fastq = temp(expand("results/kraken2_5M/kneadeddata/{run}_seqt.subsampled_kneaddata_hg37dec_v0.1_bowtie2_contam.fastq", run=run_ids)),
		kneaded_fastq = temp(expand("results/kraken2_5M/kneadeddata/{run}_seqt.subsampled_kneaddata.fastq", run=run_ids))
	params:
		reference_db="/project/data/raw/kneaddata_db/hg37dec_v0.1.4.bt2",
		output_dir="results/kraken2_5M/kneadeddata/",
		trimmomatic="/root/anaconda/envs/microbiome/share/trimmomatic-0.39-2/",
		nthreads=6
	threads: 6
	#conda:
		#"envs/kneaddata.yml"
	log:
		"logs/kneaddata.log"
	shell:
		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"python /project/src/metagenpipe.py run-kneaddata --no-paired_end --reference_db={params.reference_db} --output_dir={params.output_dir} --trimmomatic={params.trimmomatic} --nthreads={params.nthreads} {input.fastq} &>> {log} &&"
		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
		"echo \"INFO: Process finished on $end_dt\" &>> {log}"

rule kraken2:
	input:
		fastq = rules.kneaddata.output.kneaded_fastq,
		#fastq = expand("results/kraken2_5M/{run}_seqt.subsampled_kneaddata.trimmed.fastq", run=run_ids)
	output:
		check=temp(touch("kraken2.done")),
		read_files = expand("results/kraken2_5M/kraken2/{run}_seqt.subsampled_kneaddata.trimmed_read_output.txt", run=run_ids),
		freq_files = expand("results/kraken2_5M/kraken2/{run}_seqt.subsampled_kneaddata.trimmed_freq_output.txt", run=run_ids)
	params:
		input_type="fastq",
		output_dir="results/kraken2_5M/kraken2",
		reference_db="/project/data/raw/kraken2_db",
		nthreads=6,
		dbname="/project/data/raw/kraken2db"
	threads: 6
	log:
		"logs/kraken2.log"
	shell:
		"start_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
        "python /project/src/metagenpipe.py run-kraken2 --db_use={params.reference_db} --output_dir={params.output_dir} --nthreads {params.nthreads} {input.fastq} &>> {log} &&"
		"end_dt=$(date '+%d/%m/%Y %H:%M:%S') && "
		"echo \"INFO: Process started on $start_dt\" &>> {log} &&"
		"echo \"INFO: Process finished on $end_dt\" &>> {log}"
		
#rule export:
